import{_ as u}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.j-NGr5eW.js";import"./chunks/nprogress.Do6qArWV.js";import{d as m,u as E,a as y}from"./chunks/vue-router.CJ7yOhWy.js";import{a2 as g,a9 as l,W as b,a3 as F,a8 as e,a7 as s,aa as i,_ as f}from"./framework.BKlXavfA.js";import"./app.DIwye_FL.js";import"./chunks/dayjs.BeL6d4wv.js";import"./chunks/pinia.DlD3bL4k.js";import"./chunks/vue-i18n.DVmFIX_F.js";import"./content.BO4OOSBM.js";import"./router.C1axOHAx.js";const v=m("/posts/course/CS61B",async t=>JSON.parse('{"title":"CS61B","description":"CS61B, Spring 2024","frontmatter":{"title":"CS61B","date":"2024-07-13 11:32:58","description":"CS61B, Spring 2024","categories":"Course","tags":["Java","CS61B","Knowledge","Data Structures"]},"headers":[],"relativePath":"pages/posts/course/CS61B.md","lastUpdated":null}'),{lazy:(t,n)=>t.name===n.name}),N={__name:"CS61B",setup(t,{expose:n}){var k;const{data:r}=v(),d=y(),c=E(),h=Object.assign(c.meta.frontmatter||{},((k=r.value)==null?void 0:k.frontmatter)||{});return d.currentRoute.value.data=r.value,f("valaxy:frontmatter",h),globalThis.$frontmatter=h,n({frontmatter:{title:"CS61B",date:"2024-07-13 11:32:58",description:"CS61B, Spring 2024",categories:"Course",tags:["Java","CS61B","Knowledge","Data Structures"]}}),(a,o)=>{const p=u;return F(),g(p,{frontmatter:b(h)},{"main-content-md":l(()=>o[0]||(o[0]=[s("details",{class:"details custom-block"},[s("summary",null,"Lecture 1: Welcome to CS61B"),s("h5",{id:"object-oriented-programming",tabindex:"-1"},[i("Object-Oriented Programming "),s("a",{class:"header-anchor",href:"#object-oriented-programming","aria-label":'Permalink to "Object-Oriented Programming"'},"​")]),s("ul",null,[s("li",null,[i("A model for organizing programs "),s("ul",null,[s("li",null,"Modularity: Define each piece without worrying about other pieces, and they all work together."),s("li",null,"Allows for data abstraction: You can interact with an object without knowing how it’s implemented.")])]),s("li",null,[i("Objects "),s("ul",null,[s("li",null,"An object bundles together information and related behavior."),s("li",null,"Each objet has its own local state."),s("li",null,"Several objects may all be instances of a common type.")])]),s("li",null,[i("Classes "),s("ul",null,[s("li",null,"A class serves as a template for all of its instance."),s("li",null,"Each object is an instance of some class.")])])]),s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},[s("span",{lang:"en"},"TIP"),s("span",{lang:"zh-CN"},"提示")]),s("p",null,"CS61A Review")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 2: Define and Using Classes"),s("h5",{id:"static-and-non-static",tabindex:"-1"},[i("Static and non-static "),s("a",{class:"header-anchor",href:"#static-and-non-static","aria-label":'Permalink to "Static and non-static"'},"​")]),s("ul",null,[s("li",null,"静态方法和常量只能通过类名调用"),s("li",null,"非静态方法可以通过实例名调用")]),s("h5",{id:"question",tabindex:"-1"},[i("Question "),s("a",{class:"header-anchor",href:"#question","aria-label":'Permalink to "Question"'},"​")]),s("p",null,"据我所知，静态方法内能执行的只有静态方法，那么通过调用实例的非静态方法是如何执行的?"),s("hr"),s("ul",null,[s("li",null,"静态方法始终只能调用的是同一个类中的静态方法，而实例与它无关"),s("li",null,"静态方法无法直接访问实例方法或实例变量，但可以通过接受实例对象作为参数间接调用实例方法")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 3 (List 1): Primitive Types, References Types, and Linked Data Structures"),s("h5",{id:"primitive-types-and-references-types",tabindex:"-1"},[i("Primitive Types and References Types "),s("a",{class:"header-anchor",href:"#primitive-types-and-references-types","aria-label":'Permalink to "Primitive Types and References Types"'},"​")]),s("ul",null,[s("li",null,[i("等号的黄金法则："),s("code",null,"="),i("始终传递变量空间（memory box）的比特位")]),s("li",null,"原始类型变量的变量空间保存变量的值，引用类型变量的变量空间保存实例的空间地址")]),s("h5",{id:"build-a-list",tabindex:"-1"},[i("Build a List "),s("a",{class:"header-anchor",href:"#build-a-list","aria-label":'Permalink to "Build a List"'},"​")]),s("ul",null,[s("li",null,"正向构建列表和反向构建列表，递归和迭代计算链表长度，根据索引获取值")]),s("div",{style:{"max-height":"300px"},class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IntList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," first;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," IntList rest;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IntList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," f"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", IntList "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"r"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    first "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," f;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    rest "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," r;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"collapse"})])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 4 (List 2): SLLists, Nested Classes, Sentinel Nodes"),s("h5",{id:"sllists",tabindex:"-1"},[i("SLLists "),s("a",{class:"header-anchor",href:"#sllists","aria-label":'Permalink to "SLLists"'},"​")]),s("ul",null,[s("li",null,"用 SSLists 实现对 IntNode 的封装")]),s("div",{style:{"max-height":"300px"},class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," IntNode first;")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," x"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    first "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IntNode"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(x, "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"collapse"})]),s("h5",{id:"sentinel-node",tabindex:"-1"},[i("Sentinel Node "),s("a",{class:"header-anchor",href:"#sentinel-node","aria-label":'Permalink to "Sentinel Node"'},"​")]),s("ul",null,[s("li",null,"采用哨兵节点优化特判")]),s("div",{style:{"max-height":"300px"},class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  /* the first item, if it exists, is at sentinal.next.*/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," IntNode sentinel;")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," x"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sentinel "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IntNode"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sentinel.next "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," IntNode"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(x, "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"collapse"})]),s("h5",{id:"invariants",tabindex:"-1"},[s("strong",null,"Invariants"),i(),s("a",{class:"header-anchor",href:"#invariants","aria-label":'Permalink to "**Invariants**"'},"​")]),s("p",null,"An invariant is condition that is guaranteed to be true during code execution (assuming there are no bugs in your code)."),s("p",null,"Invariants make it easier to reason about code:"),s("ul",null,[s("li",null,"Can assume they are true to simplify code."),s("li",null,"Must ensure that methods preserve invariants.")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 5 (List 3): DLLists and Arrays"),s("h5",{id:"dllists",tabindex:"-1"},[i("DLLists "),s("a",{class:"header-anchor",href:"#dllists","aria-label":'Permalink to "DLLists"'},"​")]),s("ul",null,[s("li",null,"双向链表优化查找时间")]),s("h5",{id:"arrays-vs-classes",tabindex:"-1"},[i("Arrays vs. Classes "),s("a",{class:"header-anchor",href:"#arrays-vs-classes","aria-label":'Permalink to "Arrays vs. Classes"'},"​")]),s("ul",null,[s("li",null,"Array indices can be computed at runtime."),s("li",null,"Class member variable names CANNOT be computed and used at runtime.")]),s("hr"),s("p",null,"变量名在编译时被处理成内存地址，所以类成员变量名是无法在运行是计算并查找的"),s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},[s("span",{lang:"en"},"TIP"),s("span",{lang:"zh-CN"},"提示")]),s("p",null,[s("strong",null,"符号表："),i(" 变量名仅在编译时存在于符号表中，用于记录变量名及其相关信息（如类型、作用域、内存地址）。在生成的机器代码中，变量名本身并不会分配实际的内存地址。"),s("br"),s("strong",null,"内存地址："),i(" 变量名对应的值会分配一个内存地址，例如："),s("code",null,"int a = 10"),i("。在编译后，变量 a 的值（10）会存储在某个内存地址中，比如 0x1000，但是 a 这个名字在运行时并不存在，它只是一个在编译时用于符号解析的标识。")])])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 6: Testing"),s("h5",{id:"testing",tabindex:"-1"},[i("Testing "),s("a",{class:"header-anchor",href:"#testing","aria-label":'Permalink to "Testing"'},"​")]),s("div",{style:{"max-height":"300px"},class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," org.junit.jupiter.api.Test;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLListTest"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  @"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"Test")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," testSLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    SLList L "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," SLList"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"15"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    L."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"addFirst"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"10"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    L."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"addFirst"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    assertEquals"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", L."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getFirst"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"());")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    assertEquals"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"10"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", L."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"size"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"());")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"collapse"})])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 7 (List 4): Arrays and Lists")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 8 (Inheritance 1): Interface and Implementation Inheritance"),s("h5",{id:"static-type-vs-dynamic-type",tabindex:"-1"},[i("Static Type vs. Dynamic Type "),s("a",{class:"header-anchor",href:"#static-type-vs-dynamic-type","aria-label":'Permalink to "Static Type vs. Dynamic Type"'},"​")]),s("p",null,'Every variable in Java has a "compile-time type", a.k.a. "static type"。'),s("ul",null,[s("li",null,[i("This is the type specified at "),s("strong",null,"declaration"),i(". Never changes!")])]),s("p",null,'Variables also have a "run-time type", a.k.a. "dynamic type".'),s("ul",null,[s("li",null,[i("This is the type specified at "),s("strong",null,"instantiation"),i(" (e.g. when using new).")]),s("li",null,"Equal to the type of the object being pointed at.")]),s("h5",{id:"interface-vs-implementation-inheritance",tabindex:"-1"},[i("Interface vs. Implementation Inheritance "),s("a",{class:"header-anchor",href:"#interface-vs-implementation-inheritance","aria-label":'Permalink to "Interface vs. Implementation Inheritance"'},"​")]),s("p",null,"Interface inheritance (a.k.a. what):"),s("ul",null,[s("li",null,"Allow you to generalize code in powerful simple way.")]),s("p",null,"Implementation inheritance (a.k.a. how):"),s("ul",null,[s("li",null,[i("Allows code-reuse: Subclasses anc rely on superclasses or interfaces. "),s("ul",null,[s("li",null,"Example: print() implemented in List61B.java."),s("li",null,"Gives another dimension of control to subclass designers: Can decide whether or not to override default implementation.")])])]),s("p",null,[s("strong",null,"Important:"),i(' In both case, we specify "is-a" relationship, not "has-a".')]),s("ul",null,[s("li",null,"Good: Dog implements Animal, SLList implements List61B."),s("li",null,"Bad: Cat implements Claw, Set implements SSList.")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 9 (Inheritance 2): Rotating SLList"),s("h5",{id:"dynamic-method-selection-and-type-checking-puzzle",tabindex:"-1"},[i("Dynamic Method Selection and Type Checking Puzzle "),s("a",{class:"header-anchor",href:"#dynamic-method-selection-and-type-checking-puzzle","aria-label":'Permalink to "Dynamic Method Selection and Type Checking Puzzle"'},"​")]),s("p",null,"For each line of code, determine:"),s("ul",null,[s("li",null,"Does that line cause a compilation error?"),s("li",null,"Which method does dynamic method selection use?")]),s("hr"),s("ul",null,[s("li",null,"编译时检查: 确保所有语法正确，并检查类型安全。"),s("li",null,"运行时检查: 动态方法选择根据对象的实际类型选择适当的方法实现。")]),s("h5",{id:"type-checking-and-casting",tabindex:"-1"},[i("Type Checking and Casting "),s("a",{class:"header-anchor",href:"#type-checking-and-casting","aria-label":'Permalink to "Type Checking and Casting"'},"​")]),s("ul",null,[s("li",null,"编译器不关心如何实现，只关心静态类型是否匹配"),s("li",null,"慎用类型转换")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 10 (Inheritance 3): Subtype Polymorphism vs. Explicit Higher Order Functions"),s("h5",{id:"subtype-polymorphism",tabindex:"-1"},[i("Subtype Polymorphism "),s("a",{class:"header-anchor",href:"#subtype-polymorphism","aria-label":'Permalink to "Subtype Polymorphism"'},"​")]),s("p",null,"The biggest idea of the last couple of lectures: Subtype Polymorphism"),s("ul",null,[s("li",null,'Polymorphism: "providing a single interface to entities of different types"')]),s("p",null,"Consider a variable deque of static type Deque："),s("ul",null,[s("li",null,"When you call deque.addFirst(), the actual behavior is based on the dynamic type."),s("li",null,'Java automatically selects the right behavior using what is sometimes called "dynamic method selection".')]),s("p",null,"Example:"),s("div",{style:{"max-height":"300px"},class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Dog"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"T"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"implements"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Comparable"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"T"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," String name;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," size;")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Dog"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(String "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"n"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"int"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," s"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        name "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," n;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        size "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," s;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    /* Dog barks. */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," bark"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        System.out."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"println"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(name "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' " says: bark"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    /* Compare two dogs based on their sizes. */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    @"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"Override")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," compareTo"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(T "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"t"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        return"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," this"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".size "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ((Dog) t).size;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    /* Compare two dogs based on their names. */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," static"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," NameComparator"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," implements"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Comparator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"Dog"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        @"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"Override")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," int"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," compare"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Dog "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"d1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", Dog "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"d2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"            return"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," d1.name."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"compareTo"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(d2.name);")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"collapse"})])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 11 (Inheritance 4): Iterators, Object Methods"),s("h5",{id:"summary",tabindex:"-1"},[i("Summary "),s("a",{class:"header-anchor",href:"#summary","aria-label":'Permalink to "Summary"'},"​")]),s("p",null,"This course we built our own Array based Set implementation."),s("p",null,"To make it more industrial strength we:"),s("ul",null,[s("li",null,[i("Added an exception if a user tried to add null to the set. "),s("ul",null,[s("li",null,"There are other ways to deal with nulls. Our choice was arguably bad.")])]),s("li",null,[i('Added support for "ugly" then "nice" iteration. '),s("ul",null,[s("li",null,"Ugly iteration: Creating a subclass with next and hasNext methods."),s("li",null,"Nice iteration: Declaring that ArraySet implements Iterable.")])]),s("li",null,[i("Added a toString method. "),s("ul",null,[s("li",null,"Beware of String concatenation.")])]),s("li",null,[i("Added a equals method. "),s("ul",null,[s("li",null,"Used instanceof to check the class of the passed object.")])])])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 12: Introduction to Asymptotic Analysis")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 13: Midterm Review"),s("h5",{id:"summary-1",tabindex:"-1"},[i("Summary "),s("a",{class:"header-anchor",href:"#summary-1","aria-label":'Permalink to "Summary"'},"​")]),s("ul",null,[s("li",null,"程序运行时会进行两次检查：编译时检查和运行时检查，编译时检查主要检查语法和类型安全，运行时检查主要检查动态方法选择。"),s("li",null,"注意静态上下文中不能够使用泛型，泛型参数与类的实例相关联，而静态变量与方法与类相关联。"),s("li",null,"access modifier（访问修饰符）: public, protected, default, private")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 14 (Data Structures 1): Disjoint Sets"),s("h5",{id:"summary-2",tabindex:"-1"},[i("Summary "),s("a",{class:"header-anchor",href:"#summary-2","aria-label":'Permalink to "Summary"'},"​")]),s("ul",null,[s("li",null,"介绍实现非交集连接的数据结构（并查集），并优化其查找和合并操作"),s("li",null,"加权并查集（按集合大小）的查找和合并操作的时间复杂度为 O(logN)")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 15: Asymptotic Ⅱ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 16 (Data Structures 2): ADTs, BSTs")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 17 (Data Structures 3): B-Trees (2-3 2-3-4 Trees)")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 18 (Data Structures 4): Red Black Trees"),s("h5",{id:"llrb-tree",tabindex:"-1"},[i("LLRB Tree "),s("a",{class:"header-anchor",href:"#llrb-tree","aria-label":'Permalink to "LLRB Tree"'},"​")]),s("ul",null,[s("li",null,"LLRB 和 2-3 树具有相同的旋转操作；"),s("li",null,"LLRB 将两个节点连接的情况视作一个红链接（虚拟节点）；"),s("li",null,"红链接总是向左倾斜；"),s("li",null,"LLRB 最坏情况下的高度为 2-3 树的两倍。")]),s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},[s("span",{lang:"en"},"TIP"),s("span",{lang:"zh-CN"},"提示")]),s("p",null,"LLRB（Left-Leaning Red-Black Tree，左倾红黑树）是一种自平衡二叉搜索树，它通过维护树的平衡性质，确保基本操作（如插入、删除和查找）的时间复杂度保持在 O(logN)。 LLRB 是红黑树的一种变体，具有与红黑树相似的性能，但实现起来相对更简单。它由 Robert Sedgewick 提出，主要特点是所有红链接都倾向于左边。")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 19: Hashing Tables Ⅰ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 20: Hashing Tables Ⅱ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 21: Priority Queues and Heaps")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 22 (Graphs 1): Tree and Graph Traversals")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 23 (Graphs 2): BFS, DFS and Implementing")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 24 (Graphs 3): Shortest Paths"),s("h5",{id:"a",tabindex:"-1"},[i("A* "),s("a",{class:"header-anchor",href:"#a","aria-label":'Permalink to "A\\*"'},"​")]),s("ul",null,[s("li",null,"A* 算法是一种启发式搜索算法，用于最快查找图中两个节点之间的最短路径（不一定正确）。"),s("li",null,"根据现有距离的大小施加惩罚，距离越小，惩罚越大。因为相较距离的大的点，距离小的点到达终点时需要查询的点更多。"),s("li",null,"如果想要避开某个顶点，可以将其惩罚值设置为最大，但是不一定能避开该顶点。")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 25 (Graphs 4): Minimum Spanning Trees"),s("h5",{id:"cut-property",tabindex:"-1"},[i("Cut Property "),s("a",{class:"header-anchor",href:"#cut-property","aria-label":'Permalink to "Cut Property"'},"​")]),s("ul",null,[s("li",null,"将顶点随机划分成两组，两组顶点集的连接边中的最短边必然是最小生成树中的边。"),s("li",null,"反证，任选一条连接边构成最小生成树，然而有更短的连接边存在，这怎么可能，所以矛盾。")]),s("h5",{id:"prim",tabindex:"-1"},[i("Prim "),s("a",{class:"header-anchor",href:"#prim","aria-label":'Permalink to "Prim"'},"​")]),s("ul",null,[s("li",null,"Prim 算法是一种贪心算法，用于查找图中的最小生成树。"),s("li",null,"从一个顶点开始，每次选择距离最近的顶点，直到所有顶点都被访问。"),s("li",null,"用 Cut Property 解释就是，一开始任选一个顶点为一组，然后每次选择距离该顶点集最近的顶点加入该组，直到所有顶点都被加入。")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 26 (Graphs 5): Directed Acyclic Graphs"),s("h5",{id:"topological-sort",tabindex:"-1"},[i("Topological Sort "),s("a",{class:"header-anchor",href:"#topological-sort","aria-label":'Permalink to "Topological Sort"'},"​")]),s("ul",null,[s("li",null,"查找最短路时，由于 Dijkstra 算法要求图中不存在环，所以需要对图进行拓扑排序。")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 27: Software Engineering Ⅰ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 28: Tries")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 29 (Sorting 1): Basic Sorts"),s("h5",{id:"select-sort",tabindex:"-1"},[i("Select Sort "),s("a",{class:"header-anchor",href:"#select-sort","aria-label":'Permalink to "Select Sort"'},"​")]),s("h5",{id:"heapsort",tabindex:"-1"},[i("Heapsort "),s("a",{class:"header-anchor",href:"#heapsort","aria-label":'Permalink to "Heapsort"'},"​")]),s("ul",null,[s("li",null,"Naive Heapsort"),s("li",null,"In-place Heapsort")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 30 (Sorting 2): Mergesort, Insertion Sort, and Quick Sort")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 31: Software Engineering Ⅱ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 32 (Sorting 3): Quicksort")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 33 (Sorting 4): Theoretical Bounds on Sorting"),s("h5",{id:"summary-3",tabindex:"-1"},[i("Summary "),s("a",{class:"header-anchor",href:"#summary-3","aria-label":'Permalink to "Summary"'},"​")]),s("ul",null,[s("li",null,"采用比较方法的排序算法，其时间复杂度的期望值为 θ(NlogN)，无法找到更快的排序算法。"),s("li",null,"证明，通过决策树判断任意两点大小，一共产生 N! 种排序结果，查找时间复杂度为 Ω(logN!) = Ω(NlogN)。")])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 34: Software Engineering Ⅲ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 35 (Sorting 5): Radix Sorts")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 36 (Sorting 6): Radix vs. Comparison Sorts")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 37: Software Engineering Ⅳ")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 38: Compression"),s("h5",{id:"shannon-entropy",tabindex:"-1"},[i("Shannon Entropy "),s("a",{class:"header-anchor",href:"#shannon-entropy","aria-label":'Permalink to "Shannon Entropy"'},"​")]),s("ul",null,[s("li",null,[i("Formal definition: "),s("code",null,"E(-log(p(X)))"),i(", where E is expected value and p(X) is the probability that X is a given value (averaged over all possible values of X).")])])],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 39: Computability P=NP")],-1),s("details",{class:"details custom-block"},[s("summary",null,"Lecture 40: Summary")],-1)])),"main-header":l(()=>[e(a.$slots,"main-header")]),"main-header-after":l(()=>[e(a.$slots,"main-header-after")]),"main-nav":l(()=>[e(a.$slots,"main-nav")]),"main-content-before":l(()=>[e(a.$slots,"main-content-before")]),"main-content":l(()=>[e(a.$slots,"main-content")]),"main-content-after":l(()=>[e(a.$slots,"main-content-after")]),"main-nav-before":l(()=>[e(a.$slots,"main-nav-before")]),"main-nav-after":l(()=>[e(a.$slots,"main-nav-after")]),comment:l(()=>[e(a.$slots,"comment")]),footer:l(()=>[e(a.$slots,"footer")]),aside:l(()=>[e(a.$slots,"aside")]),"aside-custom":l(()=>[e(a.$slots,"aside-custom")]),default:l(()=>[e(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{N as default,v as usePageData};
