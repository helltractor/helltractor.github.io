import{_ as h}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.B9ACoAgj.js";import"./chunks/nprogress.Do6qArWV.js";import{d as b,u,a as k}from"./chunks/vue-router.C_UGPTuO.js";import{a2 as $,a9 as t,W as g,a3 as v,a8 as s,a7 as e,aa as r,_ as y}from"./framework.BKlXavfA.js";import"./app.BTXeQvet.js";import"./chunks/dayjs.BeL6d4wv.js";import"./chunks/pinia.DlD3bL4k.js";import"./chunks/vue-i18n.DVmFIX_F.js";import"./content.BO4OOSBM.js";import"./router.C1axOHAx.js";const P=b("/program/contest/todo",async o=>JSON.parse('{"title":"待做","description":"","frontmatter":{"title":"待做","date":"2025-05-11 23:04:13"},"headers":[],"relativePath":"pages/program/contest/todo.md","lastUpdated":null}'),{lazy:(o,n)=>o.name===n.name}),O={__name:"todo",setup(o,{expose:n}){var m;const{data:l}=P(),d=k(),p=u(),i=Object.assign(p.meta.frontmatter||{},((m=l.value)==null?void 0:m.frontmatter)||{});return d.currentRoute.value.data=l.value,y("valaxy:frontmatter",i),globalThis.$frontmatter=i,n({frontmatter:{title:"待做",date:"2025-05-11 23:04:13"}}),(a,c)=>{const f=h;return v(),$(f,{frontmatter:g(i)},{"main-content-md":t(()=>c[0]||(c[0]=[e("h2",{id:"待分类",tabindex:"-1"},[r("待分类 "),e("a",{class:"header-anchor",href:"#待分类","aria-label":'Permalink to "待分类"'},"​")],-1),e("ul",{class:"contains-task-list"},[e("li",{class:"task-list-item"},[e("input",{class:"task-list-item-checkbox",disabled:"",type:"checkbox"}),r(),e("a",{href:"https://leetcode.cn/problems/find-sum-of-array-product-of-magical-sequences/description/",target:"_blank",rel:"noreferrer"},"3539. 魔法序列的数组乘积之和 - 力扣（LeetCode）")]),e("li",{class:"task-list-item"},[e("input",{class:"task-list-item-checkbox",disabled:"",type:"checkbox"}),r(),e("a",{href:"https://leetcode.cn/problems/maximize-subarrays-after-removing-one-conflicting-pair/description/",target:"_blank",rel:"noreferrer"},"3480. 删除一个冲突对后最大子数组数目 - 力扣（LeetCode）")]),e("li",{class:"task-list-item"},[e("input",{class:"task-list-item-checkbox",disabled:"",type:"checkbox"}),r(),e("a",{href:"https://leetcode.cn/problems/longest-special-path-ii/description/",target:"_blank",rel:"noreferrer"},"3486. 最长特殊路径 II - 力扣（LeetCode）")])],-1),e("h2",{id:"贪心",tabindex:"-1"},[r("贪心 "),e("a",{class:"header-anchor",href:"#贪心","aria-label":'Permalink to "贪心"'},"​")],-1),e("h2",{id:"dp",tabindex:"-1"},[r("DP "),e("a",{class:"header-anchor",href:"#dp","aria-label":'Permalink to "DP"'},"​")],-1),e("h3",{id:"树形dp",tabindex:"-1"},[r("树形DP "),e("a",{class:"header-anchor",href:"#树形dp","aria-label":'Permalink to "树形DP"'},"​")],-1),e("ul",{class:"contains-task-list"},[e("li",{class:"task-list-item"},[e("input",{class:"task-list-item-checkbox",disabled:"",type:"checkbox"}),r(),e("a",{href:"https://leetcode.cn/problems/subtree-inversion-sum/",target:"_blank",rel:"noreferrer"},"3544. 子树反转和 - 力扣（LeetCode）")])],-1)])),"main-header":t(()=>[s(a.$slots,"main-header")]),"main-header-after":t(()=>[s(a.$slots,"main-header-after")]),"main-nav":t(()=>[s(a.$slots,"main-nav")]),"main-content-before":t(()=>[s(a.$slots,"main-content-before")]),"main-content":t(()=>[s(a.$slots,"main-content")]),"main-content-after":t(()=>[s(a.$slots,"main-content-after")]),"main-nav-before":t(()=>[s(a.$slots,"main-nav-before")]),"main-nav-after":t(()=>[s(a.$slots,"main-nav-after")]),comment:t(()=>[s(a.$slots,"comment")]),footer:t(()=>[s(a.$slots,"footer")]),aside:t(()=>[s(a.$slots,"aside")]),"aside-custom":t(()=>[s(a.$slots,"aside-custom")]),default:t(()=>[s(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{O as default,P as usePageData};
